// Generated by CoffeeScript 1.4.0

C['Ajax'] = klassExtendBase(function(config) {
  if (config) {
    this['request'](config);
    return this;
  }
}, {
  'request': function(vars) {
    var callback, error, query, type, url, xhr;
    if (vars.dataType === 'json') {
      delete vars.dataType;
      return this['json'](vars);
    }
    url = vars['url'];
    callback = vars['callback'] || nullFunction;
    error = vars['error'] || nullFunction;
    type = vars['type'] || 'GET';
    query = EMPTY;
    xhr = this._xhr = new XMLHttpRequest;
    if (!vars['cash']) {
      if (!vars['query']) {
        vars['query'] = {};
      }
      vars['query']['cir' + dateNow()] = 0;
    }
    if (vars['query']) {
      query = vars['query'];
      if (isObject(query)) {
        query = encodeURI(makeQueryString(query));
      }
    }
    xhr.onreadystatechange = function() {
      if (xhr.readyState * 1 !== 4) {
        return;
      }
      if (xhr.status === 200) {
        return callback(xhr.responseText, xhr);
      }
      return error(xhr);
    };
    if (type === 'GET') {
      if (url.indexOf('?') !== -1) {
        url += '&';
      } else {
        url += '?';
      }
      url += query;
      query = EMPTY;
    }
    xhr.open(type, url);
    if (type === 'POST') {
      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
    }
    xhr.send(query);
    return this;
  },
  'abort': function() {
    if (this._xhr) {
      this._xhr.abort;
    }
    return this;
  },
  'json': function(vars) {
    var callback, error;
    callback = vars['callback'];
    error = vars['error'];
    vars['callback'] = function(data) {
      return callback(jsonParse(data));
    };
    vars['error'] = function(data) {
      if (error) {
        return error(data);
      }
    };
    this['request'](vars);
    return this;
  }
});
